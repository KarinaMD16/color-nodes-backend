// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using color_nodes_backend.Data;

#nullable disable

namespace color_nodes_backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250906202445_AddGameAndGameMove")]
    partial class AddGameAndGameMove
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("color_nodes_backend.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cups")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CurrentPlayerIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LastHits")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxMovesPerTurn")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovesThisTurn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerOrder")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RoomCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TargetPattern")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalMoves")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TurnDurationSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TurnEndsAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAtUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("color_nodes_backend.Entities.GameMove", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<int>("FromIndex")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToIndex")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("GameMoves");
                });

            modelBuilder.Entity("color_nodes_backend.Entities.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<int>("LeaderId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isActive")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("color_nodes_backend.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RoomId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Score")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("REAL")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("color_nodes_backend.Entities.User", b =>
                {
                    b.HasOne("color_nodes_backend.Entities.Room", "Room")
                        .WithMany("Users")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Room");
                });

            modelBuilder.Entity("color_nodes_backend.Entities.Room", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
